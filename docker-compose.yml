version: "3.8"

services:
  patient-service-db:
    image: 'postgres:latest'
    container_name: patient-service-db
    environment:
      - 'POSTGRES_DB=db'
      - 'POSTGRES_USER=admin_user'
      - 'POSTGRES_PASSWORD=password'
    ports:
      - '5000:5432'
    volumes:
      - patient-service-data:/var/lib/postgresql/data
    networks:
      - internal

  patient-service:
    image: 'patient-service:latest'
    container_name: patient-service
    build:
      context: ./patient-service
      dockerfile: Dockerfile
    depends_on:
      - patient-service-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://patient-service-db:5432/db
      SPRING_DATASOURCE_USERNAME: admin_user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - internal

  billing-service-db:
    image: 'postgres:latest'
    container_name: billing-service-db
    environment:
      - 'POSTGRES_DB=db'
      - 'POSTGRES_USER=admin_user'
      - 'POSTGRES_PASSWORD=password'
    ports:
      - '5001:5432'
    volumes:
      - billing-service-data:/var/lib/postgresql/data
    networks:
      - internal

  billing-service:
    image: 'billing-service:latest'
    container_name: billing-service
    build:
      context: ./billing-service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://billing-service-db:5432/db
      SPRING_DATASOURCE_USERNAME: admin_user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
    depends_on:
      - patient-service
      - billing-service-db
    ports:
      - '4001:4001'
      - '9001:9001'
    networks:
      - internal

  analytics-service:
    image: 'analytics-service:latest'
    container_name: analytics-service
    build:
      context: ./analytics-service
      dockerfile: Dockerfile
    ports:
      - '4002:4002'
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - patient-service
      - kafka
    networks:
      - internal

  api-gateway:
    image: 'api-gateway:latest'
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - '4004:4004'
    depends_on:
      - patient-service
    networks:
      - internal

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      - 'KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094'
      - 'KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER'
      - 'KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093'
      - 'KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      - 'KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094'
      - 'KAFKA_CFG_NODE_ID=0'
      - 'KAFKA_CFG_PROCESS_ROLES=controller,broker'
    networks:
      - internal

  auth-service-db:
    image: 'postgres:latest'
    container_name: auth-service-db
    environment:
      - 'POSTGRES_DB=db'
      - 'POSTGRES_USER=admin_user'
      - 'POSTGRES_PASSWORD=password'
    ports:
      - '5002:5432'
    volumes:
      - auth-service-data:/var/lib/postgresql/data
    networks:
      - internal

  auth-service:
    image: 'auth-service:latest'
    container_name: auth-service
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-service-db:5432/db
      SPRING_DATASOURCE_USERNAME: admin_user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
      JWT_SECRET: c2VjdXJlS2V5U2VjdXJlS2V5U2VjdXJlS2V5U2VjdXJlMQ==
    depends_on:
      - auth-service-db
    ports:
      - '4005:4005'
    networks:
      - internal

volumes:
  patient-service-data:
  billing-service-data:
  auth-service-data:

networks:
  internal:
    driver: bridge
